buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '1.5.13.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group = 'briungri'
version = 'latest'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
ext['mockito.version'] = '2.18.3'

sourceCompatibility = 1.7
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

jar {
    baseName = 'bidtactoe-backend'
    version = 'latest'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'

    // https://mvnrepository.com/artifact/io.reactivex/rxkotlin
    compile group: 'io.reactivex', name: 'rxkotlin', version: '0.21.0'

    // Firebase
    compile "org.riversun:fcm:0.2.0"

    // MongoDB Driver
    compile 'org.mongodb:mongo-java-driver:3.7.1'

    // Redis Driver
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

    // Spring websockets
    compile("org.webjars:webjars-locator")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.1.0")
    compile("com.mashape.unirest:unirest-java:1.4.9")
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}
